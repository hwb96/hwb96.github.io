name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      # 添加工作目录检查
      - name: Check working directory
        run: |
          pwd
          ls -la

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
          
          echo "Content of current directory after build:"
          ls -la
          
          echo "Content of public directory:"
          ls -la public/

      # 确保 public 目录存在且有内容
      - name: Verify public directory
        run: |
          if [ ! -d "public" ]; then
            echo "Error: public directory does not exist!"
            exit 1
          fi
          
          if [ -z "$(ls -A public/)" ]; then
            echo "Error: public directory is empty!"
            exit 1
          fi
          
          echo "Public directory exists and contains files:"
          ls -la public/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      # 验证上传是否成功
      - name: List artifacts
        run: |
          echo "Checking artifacts..."
          ls -la "$RUNNER_TEMP"
          echo "GitHub workspace:"
          ls -la $GITHUB_WORKSPACE

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3